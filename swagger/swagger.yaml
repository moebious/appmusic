swagger: '2.0'
info:
  title: API app Music
  description: A simple App of Music 
  version: 1.0.0
  contact:
    name: Kevin Vicent
    url: http://moebio.us
    email: kevin.vicent@gmail.com
host: localhost:5300
licence: MIT
basePath: /        
paths:
  /: 
    get:
      summary: Endpoint for list category music
      description: list Music
      produces:
        - application/json
      schema:
          $ref: '#/definitions/music'
      responses:
        200:
        description: OK
    post:
      summary: Create category of Music
      description: Create Playlist Music
      produces:
        - application/json
      schema:
        $ref: '#/definitions/music'
      parameters:
      - name: category
        in: query
        description: The category
        required: true
        type: string
      - name: playlist
        in: query
        description: The playlist music of user 
        required: true
        type: string
      - name: url
        in: query
        description: The url playlist music of user 
        required: true
        type: url
      responses:
        200:
        description: OK
  /user:
    get:
      tags:
      - user
      summary: Returns a list of users.
      description: "List of User whit token"
      operationId: getList
      produces:
      - application/xml
      - application/json
      schema:
        $ref: '#/definitions/user'
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
          schema:
            type: string
        "500":
          description: Invalid information
  /user/{id}:
    get:
      tags:
      - user
      summary: Returns a only user
      description: ""
      operationId: getUser
      produces:
      - application/xml
      - application/json
      schema:
        $ref: '#/definitions/user'
      parameters:
      - name: id
        in: query
        description: The user id
        required: true
        type: integer
        example: 2
        schema:
          $ref: '#/interface_adapters/IMusic'
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
          schema:
            type: string
        "500":
          description: Invalid information
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: email
        description: Created user object
        required: true
        example: jes@test.com
      - in: body
        name: password
        description: Password
        required: true
        example: Ma2291624*
        schema:
          $ref: '#/definitions/user'
      responses:
        default:
          description: successful operation
    put:
      tags:
      - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        description: name that need to be updated
        required: true
        type: integer
      - in: body
        name: body
        description: Updated user object
        required: true
        schema:
          $ref: '#/definitions/user'
      responses:
        "200":
          description: successful
        "404":
          description: User not found
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        description: name that need to be updated
        required: true
        type: integer
        schema:
          $ref: '#/definitions/user'
      responses:
        "400":
          description: Invalid email supplied
        "404":
          description: User not found
/login:
    post:
      tags:
      - user
      summary: Logs user into the system
      description: ""
      operationId: loginUser
      produces:
      - application/xml
      - application/json
      parameters:
      - name: email
        in: query
        description: The user email for login
        required: true
        type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        type: string
        schema:
          $ref: '#/definitions/user'
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
          schema:
            type: string
        "400":
          description: Invalid email/password supplied
  
definitions:
  user:
    properties:
      id:
        type: integer
      email:
        type: string
      password:
        type: string
    # Both properties are required
    required:  
      - id
      - email
      - password
  music:
    properties:
      id:
        type: integer
      category:
        type: string
      playlist:
        type: array
      url:
        type: url
      user_id:
        type: integer

# $ref: '#/interface_adapters/IUser'
# $ref: '#/interface_adapters/IMusic'